{"mappings":"ACAA,IAAI,EAAO,aAAa,OAAO,CAAC,QAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,SAAW,EAAE,CACvF,MAAM,EAAW,SAAS,aAAa,CAAC,aAClC,EAAW,SAAS,aAAa,CAAC,aAExC,SAAS,IACP,EAAS,SAAS,CAAG,GACrB,EAAK,OAAO,CAAC,AAAC,IACZ,IAAM,EAAW,CAAC;;kBAEJ,EAAE,EAAK,KAAK,CAAC;;;oBAGX,EAAE,EAAK,IAAI,CAAC;;8BAEF,EAAE,EAAK,KAAK,CAAC;;qCAEN,EAAE,EAAK,EAAE,CAAC;cACjC,EAAE,EAAK,GAAG,CAAC;sCACa,EAAE,EAAK,EAAE,CAAC;;iCAEf,EAAE,EAAK,GAAG,CAAG,EAAK,KAAK,CAAC;;4CAEb,EAAE,EAAK,EAAE,CAAC;;;;SAI7C,CAAC,CACN,EAAS,kBAAkB,CAAC,YAAa,EAC3C,GACA,GACF,CAIA,SAAS,IACP,IAAI,EAAM,EACV,EAAK,OAAO,CAAC,AAAC,IACZ,GAAO,EAAK,KAAK,CAAG,EAAK,GAAG,AAC9B,GACA,EAAS,SAAS,CAAG,CAAC,cAAc,EAAE,EAAI,CAAC,AAC7C,CATA,IAWA,EAAS,gBAAgB,CAAC,QAAS,AAAC,IAClC,GAAI,EAAE,MAAM,CAAC,OAAO,CAAC,eAAgB,CACnC,IAAM,EAAK,EAAE,MAAM,CAAC,YAAY,CAAC,WACjC,QAAQ,GAAG,CAAC,GAEZ,IAAM,EAAQ,EAAK,SAAS,CAAC,AAAC,GAAS,EAAK,EAAE,EAAI,GAClD,EAAK,MAAM,CAAC,EAAO,GAEnB,aAAa,OAAO,CAAC,OAAQ,KAAK,SAAS,CAAC,IAC5C,IACA,GACF,CACF,GAEA,EAAS,gBAAgB,CAAC,QAAS,AAAC,IAClC,GAAI,EAAE,MAAM,CAAC,OAAO,CAAC,SAAU,CAC7B,IAAM,EAAK,EAAE,MAAM,CAAC,YAAY,CAAC,WACjC,QAAQ,GAAG,CAAC,GACZ,IAAM,EAAQ,EAAK,SAAS,CAAC,AAAC,GAAS,EAAK,EAAE,EAAI,EAClD,CAAA,CAAI,CAAC,EAAM,CAAC,GAAG,EAAI,EAEnB,aAAa,OAAO,CAAC,OAAQ,KAAK,SAAS,CAAC,IAC5C,IACA,GACF,CACF,GAEA,EAAS,gBAAgB,CAAC,QAAS,AAAC,IAClC,GAAI,EAAE,MAAM,CAAC,OAAO,CAAC,QAAS,CAC5B,IAAM,EAAK,EAAE,MAAM,CAAC,YAAY,CAAC,WACjC,QAAQ,GAAG,CAAC,GACZ,IAAM,EAAQ,EAAK,SAAS,CAAC,AAAC,GAAS,EAAK,EAAE,EAAI,EAC9C,CAAA,CAAI,CAAC,EAAM,CAAC,GAAG,CAAG,EACpB,CAAI,CAAC,EAAM,CAAC,GAAG,EAAI,EAEnB,EAAK,MAAM,CAAC,EAAO,GAIrB,aAAa,OAAO,CAAC,OAAQ,KAAK,SAAS,CAAC,IAC5C,IACA,GACF,CACF","sources":["<anon>","app/cart.js"],"sourcesContent":["var $60fbde7f61090149$exports = {};\nlet $60fbde7f61090149$var$cart = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\nconst $60fbde7f61090149$var$showCart = document.querySelector(\"#showCart\");\nconst $60fbde7f61090149$var$sumMoney = document.querySelector(\"#sumMoney\");\n// show cart\nfunction $60fbde7f61090149$var$renderCart() {\n    $60fbde7f61090149$var$showCart.innerHTML = \"\";\n    $60fbde7f61090149$var$cart.forEach((item)=>{\n        const template = `<tr id=\"carts\">\n      <td class=\"pro-thumnail\">\n        <img src=\"${item.image}\" alt=\"\" />\n      </td>\n      <td class=\"pro-title\">\n        <a href=\"#\">${item.name}</a>\n      </td>\n      <td class=\"pro-price\">$ ${item.price}</td>\n      <td class=\"pro-quantity\">\n        <button class=\"sub\" data-id=\"${item.id}\">-</button>\n        <span>${item.qty}</span>\n        <button class=\"plus\" data-id=\"${item.id}\">+</button>\n      </td>\n      <td class=\"pro-subtotal\">$ ${item.qty * item.price}</td>\n      <td class=\"pro-remove\">\n        <button class=\"delete-btn\" data-id=\"${item.id}\">\n          <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Remove\n        </button>\n      </td>\n    </tr>`;\n        $60fbde7f61090149$var$showCart.insertAdjacentHTML(\"beforeend\", template);\n    });\n    $60fbde7f61090149$var$total();\n}\n$60fbde7f61090149$var$renderCart();\n// tổng tiền\nfunction $60fbde7f61090149$var$total() {\n    let sum = 0;\n    $60fbde7f61090149$var$cart.forEach((item)=>{\n        sum += item.price * item.qty;\n    });\n    $60fbde7f61090149$var$sumMoney.innerHTML = `Grand total: $${sum}`;\n}\n// xoá sản phẩm\n$60fbde7f61090149$var$showCart.addEventListener(\"click\", (e)=>{\n    if (e.target.matches(\".delete-btn\")) {\n        const id = e.target.getAttribute(\"data-id\");\n        console.log(id);\n        // tìm index\n        const index = $60fbde7f61090149$var$cart.findIndex((item)=>item.id == id);\n        $60fbde7f61090149$var$cart.splice(index, 1);\n        // đổ dữ liệu từ local ra bên ngoài\n        localStorage.setItem(\"cart\", JSON.stringify($60fbde7f61090149$var$cart));\n        $60fbde7f61090149$var$renderCart();\n        $60fbde7f61090149$var$total();\n    }\n});\n// Tăng số lượng\n$60fbde7f61090149$var$showCart.addEventListener(\"click\", (e)=>{\n    if (e.target.matches(\".plus\")) {\n        const id = e.target.getAttribute(\"data-id\");\n        console.log(id);\n        const index = $60fbde7f61090149$var$cart.findIndex((item)=>item.id == id);\n        $60fbde7f61090149$var$cart[index].qty += 1;\n        // đổ dữ liệu từ local ra bên ngoài\n        localStorage.setItem(\"cart\", JSON.stringify($60fbde7f61090149$var$cart));\n        $60fbde7f61090149$var$renderCart();\n        $60fbde7f61090149$var$total();\n    }\n});\n// Giảm số lượng\n$60fbde7f61090149$var$showCart.addEventListener(\"click\", (e)=>{\n    if (e.target.matches(\".sub\")) {\n        const id = e.target.getAttribute(\"data-id\");\n        console.log(id);\n        const index = $60fbde7f61090149$var$cart.findIndex((item)=>item.id == id);\n        if ($60fbde7f61090149$var$cart[index].qty > 1) $60fbde7f61090149$var$cart[index].qty -= 1;\n        else $60fbde7f61090149$var$cart.splice(index, 1);\n        // đổ dữ liệu từ local ra bên ngoài\n        localStorage.setItem(\"cart\", JSON.stringify($60fbde7f61090149$var$cart));\n        $60fbde7f61090149$var$renderCart();\n        $60fbde7f61090149$var$total();\n    }\n}); // import cartService from \"./services/cartService\";\n // import JsonServerConstants from \"./constants/JsonServerConstants\";\n // const cartApi = new cartService(JsonServerConstants.EndPoint);\n // const showCart = document.querySelector(\"#showCart\");\n // let totalPrice = 0;\n // let totalShow = document.querySelector(\"#total\");\n // showCart.addEventListener(\"click\", handleDeleteCart);\n // showCart.addEventListener(\"change\", handleQuantityChange);\n // function updateTotalPrice() {\n //   totalPrice = calculateTotalPrice(); // Uncomment this line\n //   console.log(\"Total Price:\", totalPrice);\n //   // Set the formatted total price to the total.textContent\n //   totalShow.textContent = `Grand Total: ${totalPrice}`;\n // }\n // async function handleDeleteCart(e) {\n //   if (e.target.classList.contains(\"delete-btn\")) {\n //     const id = e.target.getAttribute(\"data-id\");\n //     try {\n //       const deletedItem = await cartApi.DeleteCart(id);\n //       const productRow = e.target.closest(\"tr\");\n //       productRow.remove();\n //       totalPrice -= deletedItem.price;\n //       updateTotalPrice();\n //     } catch (error) {\n //       console.error(\"Error deleting product:\", error);\n //     }\n //   }\n // }\n // function renderCart(item) {\n //   const template = `<tr id=\"carts\">\n //     <td class=\"pro-thumnail\">\n //       <img src=\"${item.image}\" alt=\"\" />\n //     </td>\n //     <td class=\"pro-title\">\n //       <a href=\"#\">${item.name}</a>\n //     </td>\n //     <td class=\"pro-price\">$ ${item.price}</td>\n //     <td class=\"pro-quantity\">\n //       <div class=\"product-detail__quantity\">\n //         <div class=\"quantity cart-quantity\">\n //           <input type=\"number\" value=\"1\" min=\"1\" max=\"10\" data-id=\"${item.id}\" class=\"quantity-input\" />\n //         </div>\n //       </div>\n //     </td>\n //     <td class=\"pro-subtotal\">$ ${item.price}</td>\n //     <td class=\"pro-remove\">\n //       <button class=\"delete-btn\"  data-id=\"${item.id}\">\n //         <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Remove\n //       </button>\n //     </td>\n //   </tr>`;\n //   showCart.insertAdjacentHTML(\"beforeend\", template);\n //   totalPrice += item.price;\n //   updateTotalPrice();\n // }\n // function handleQuantityChange(e) {\n //   if (e.target.matches(\".quantity-input\")) {\n //     const newQuantity = parseInt(e.target.value, 10);\n //     const itemId = e.target.getAttribute(\"data-id\");\n //     cartApi.updateCartItemQuantity(itemId, newQuantity).then((updatedItem) => {\n //       const productRow = e.target.closest(\"tr\");\n //       const priceElement = productRow.querySelector(\".pro-price\");\n //       const subtotalElement = productRow.querySelector(\".pro-subtotal\");\n //       priceElement.textContent = `$ ${updatedItem.price}`;\n //       subtotalElement.textContent = `$ ${(updatedItem.price * newQuantity).toFixed(2)}`;\n //       updateTotalPrice();\n //     });\n //   }\n // }\n // async function calculateTotalPrice() {\n //   let total = 0;\n //   const quantityInputs = Array.from(document.querySelectorAll(\".quantity-input\"));\n //   console.log(\"Quantity Inputs:\", quantityInputs);\n //   // Use Promise.all to await all promises before continuing\n //   await Promise.all(\n //     quantityInputs.map(async (input) => {\n //       const itemId = input.getAttribute(\"data-id\");\n //       const quantity = parseInt(input.value, 10);\n //       // Await the promise returned by getCartItemById\n //       const item = await cartApi.getCartItemById(itemId);\n //       console.log(\"Item ID:\", itemId);\n //       console.log(\"Quantity:\", quantity);\n //       console.log(\"Item:\", item);\n //       // Check if item.price and quantity are valid numbers\n //       if (item && !isNaN(item.price) && !isNaN(quantity)) {\n //         total += quantity * parseFloat(item.price);\n //       }\n //     })\n //   );\n //   console.log(\"Calculated Total:\", total);\n //   return total;\n // }\n // cartApi.findAllCart().then((data) => {\n //   data.forEach((item) => {\n //     renderCart(item);\n //   });\n //   // Sau khi đã thêm tất cả sản phẩm vào giỏ hàng, cập nhật tổng tiền\n //   updateTotalPrice();\n // });\n\n\n//# sourceMappingURL=cart.c5dbc849.js.map\n","let cart = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\nconst showCart = document.querySelector(\"#showCart\");\nconst sumMoney = document.querySelector(\"#sumMoney\");\n// show cart\nfunction renderCart() {\n  showCart.innerHTML = \"\";\n  cart.forEach((item) => {\n    const template = `<tr id=\"carts\">\n      <td class=\"pro-thumnail\">\n        <img src=\"${item.image}\" alt=\"\" />\n      </td>\n      <td class=\"pro-title\">\n        <a href=\"#\">${item.name}</a>\n      </td>\n      <td class=\"pro-price\">$ ${item.price}</td>\n      <td class=\"pro-quantity\">\n        <button class=\"sub\" data-id=\"${item.id}\">-</button>\n        <span>${item.qty}</span>\n        <button class=\"plus\" data-id=\"${item.id}\">+</button>\n      </td>\n      <td class=\"pro-subtotal\">$ ${item.qty * item.price}</td>\n      <td class=\"pro-remove\">\n        <button class=\"delete-btn\" data-id=\"${item.id}\">\n          <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Remove\n        </button>\n      </td>\n    </tr>`;\n    showCart.insertAdjacentHTML(\"beforeend\", template);\n  });\n  total();\n}\nrenderCart();\n\n// tổng tiền\nfunction total() {\n  let sum = 0;\n  cart.forEach((item) => {\n    sum += item.price * item.qty;\n  });\n  sumMoney.innerHTML = `Grand total: $${sum}`;\n}\n// xoá sản phẩm\nshowCart.addEventListener(\"click\", (e) => {\n  if (e.target.matches(\".delete-btn\")) {\n    const id = e.target.getAttribute(\"data-id\");\n    console.log(id);\n    // tìm index\n    const index = cart.findIndex((item) => item.id == id);\n    cart.splice(index, 1);\n    // đổ dữ liệu từ local ra bên ngoài\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    renderCart();\n    total();\n  }\n});\n// Tăng số lượng\nshowCart.addEventListener(\"click\", (e) => {\n  if (e.target.matches(\".plus\")) {\n    const id = e.target.getAttribute(\"data-id\");\n    console.log(id);\n    const index = cart.findIndex((item) => item.id == id);\n    cart[index].qty += 1;\n    // đổ dữ liệu từ local ra bên ngoài\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    renderCart();\n    total();\n  }\n});\n// Giảm số lượng\nshowCart.addEventListener(\"click\", (e) => {\n  if (e.target.matches(\".sub\")) {\n    const id = e.target.getAttribute(\"data-id\");\n    console.log(id);\n    const index = cart.findIndex((item) => item.id == id);\n    if (cart[index].qty > 1) {\n      cart[index].qty -= 1;\n    } else {\n      cart.splice(index, 1);\n    }\n\n    // đổ dữ liệu từ local ra bên ngoài\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    renderCart();\n    total();\n  }\n});\n\n// import cartService from \"./services/cartService\";\n// import JsonServerConstants from \"./constants/JsonServerConstants\";\n\n// const cartApi = new cartService(JsonServerConstants.EndPoint);\n// const showCart = document.querySelector(\"#showCart\");\n// let totalPrice = 0;\n\n// let totalShow = document.querySelector(\"#total\");\n\n// showCart.addEventListener(\"click\", handleDeleteCart);\n// showCart.addEventListener(\"change\", handleQuantityChange);\n\n// function updateTotalPrice() {\n//   totalPrice = calculateTotalPrice(); // Uncomment this line\n//   console.log(\"Total Price:\", totalPrice);\n\n//   // Set the formatted total price to the total.textContent\n//   totalShow.textContent = `Grand Total: ${totalPrice}`;\n// }\n\n// async function handleDeleteCart(e) {\n//   if (e.target.classList.contains(\"delete-btn\")) {\n//     const id = e.target.getAttribute(\"data-id\");\n//     try {\n//       const deletedItem = await cartApi.DeleteCart(id);\n//       const productRow = e.target.closest(\"tr\");\n//       productRow.remove();\n//       totalPrice -= deletedItem.price;\n//       updateTotalPrice();\n//     } catch (error) {\n//       console.error(\"Error deleting product:\", error);\n//     }\n//   }\n// }\n\n// function renderCart(item) {\n//   const template = `<tr id=\"carts\">\n//     <td class=\"pro-thumnail\">\n//       <img src=\"${item.image}\" alt=\"\" />\n//     </td>\n//     <td class=\"pro-title\">\n//       <a href=\"#\">${item.name}</a>\n//     </td>\n//     <td class=\"pro-price\">$ ${item.price}</td>\n//     <td class=\"pro-quantity\">\n//       <div class=\"product-detail__quantity\">\n//         <div class=\"quantity cart-quantity\">\n//           <input type=\"number\" value=\"1\" min=\"1\" max=\"10\" data-id=\"${item.id}\" class=\"quantity-input\" />\n//         </div>\n//       </div>\n//     </td>\n//     <td class=\"pro-subtotal\">$ ${item.price}</td>\n//     <td class=\"pro-remove\">\n//       <button class=\"delete-btn\"  data-id=\"${item.id}\">\n//         <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Remove\n//       </button>\n//     </td>\n//   </tr>`;\n//   showCart.insertAdjacentHTML(\"beforeend\", template);\n//   totalPrice += item.price;\n//   updateTotalPrice();\n// }\n\n// function handleQuantityChange(e) {\n//   if (e.target.matches(\".quantity-input\")) {\n//     const newQuantity = parseInt(e.target.value, 10);\n//     const itemId = e.target.getAttribute(\"data-id\");\n\n//     cartApi.updateCartItemQuantity(itemId, newQuantity).then((updatedItem) => {\n//       const productRow = e.target.closest(\"tr\");\n//       const priceElement = productRow.querySelector(\".pro-price\");\n//       const subtotalElement = productRow.querySelector(\".pro-subtotal\");\n\n//       priceElement.textContent = `$ ${updatedItem.price}`;\n//       subtotalElement.textContent = `$ ${(updatedItem.price * newQuantity).toFixed(2)}`;\n//       updateTotalPrice();\n//     });\n//   }\n// }\n\n// async function calculateTotalPrice() {\n//   let total = 0;\n//   const quantityInputs = Array.from(document.querySelectorAll(\".quantity-input\"));\n\n//   console.log(\"Quantity Inputs:\", quantityInputs);\n\n//   // Use Promise.all to await all promises before continuing\n//   await Promise.all(\n//     quantityInputs.map(async (input) => {\n//       const itemId = input.getAttribute(\"data-id\");\n//       const quantity = parseInt(input.value, 10);\n\n//       // Await the promise returned by getCartItemById\n//       const item = await cartApi.getCartItemById(itemId);\n\n//       console.log(\"Item ID:\", itemId);\n//       console.log(\"Quantity:\", quantity);\n//       console.log(\"Item:\", item);\n\n//       // Check if item.price and quantity are valid numbers\n//       if (item && !isNaN(item.price) && !isNaN(quantity)) {\n//         total += quantity * parseFloat(item.price);\n//       }\n//     })\n//   );\n\n//   console.log(\"Calculated Total:\", total);\n\n//   return total;\n// }\n\n// cartApi.findAllCart().then((data) => {\n//   data.forEach((item) => {\n//     renderCart(item);\n//   });\n//   // Sau khi đã thêm tất cả sản phẩm vào giỏ hàng, cập nhật tổng tiền\n//   updateTotalPrice();\n// });\n"],"names":["$60fbde7f61090149$var$cart","localStorage","getItem","JSON","parse","$60fbde7f61090149$var$showCart","document","querySelector","$60fbde7f61090149$var$sumMoney","$60fbde7f61090149$var$renderCart","innerHTML","forEach","item","template","image","name","price","id","qty","insertAdjacentHTML","$60fbde7f61090149$var$total","sum","addEventListener","e","target","matches","getAttribute","console","log","index","findIndex","splice","setItem","stringify"],"version":3,"file":"cart.c5dbc849.js.map"}