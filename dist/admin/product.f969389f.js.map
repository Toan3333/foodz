{"mappings":"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","sources":["<anon>","app/services/productService.js","app/listProductAdmin.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire06c3\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire06c3\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"594Pg\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $3bf18950d42c3857$export$2e2bcd8739ae039);\n\nvar $fmRoT = parcelRequire(\"fmRoT\");\nclass $3bf18950d42c3857$var$productService {\n    constructor(endPoint){\n        this.collectionName = \"products\";\n        this.endPoint = endPoint;\n    }\n    findAllProducts = async ()=>{\n        const response = await (0, $fmRoT.default).get(this.endPoint + this.collectionName);\n        return response.data;\n    };\n    addAllProducts = async (newProduct)=>{\n        const response = await (0, $fmRoT.default).post(this.endPoint + this.collectionName, newProduct);\n        return response.data;\n    };\n    getProductById = async (id)=>{\n        const response = await (0, $fmRoT.default).get(this.endPoint + this.collectionName + \"/\" + id);\n        return response.data;\n    };\n    getlastId = async ()=>{\n        try {\n            const response = await (0, $fmRoT.default).get(`${this.endPoint}${this.collectionName}`);\n            const products = response.data;\n            if (products.length === 0) return \"0\";\n            return (parseInt(products[products.length - 1].id, 10) + 1).toString();\n        } catch (error) {\n            console.error(\"Error getting last product ID:\", error);\n        }\n    };\n    deleteProduct = async (productId)=>{\n        const response = await (0, $fmRoT.default).delete(`${this.endPoint}${this.collectionName}/${productId}`);\n        return response.data;\n    };\n    updateProduct = async (productId, updatedProduct)=>{\n        const response = await (0, $fmRoT.default).put(`${this.endPoint}${this.collectionName}/${productId}`, updatedProduct);\n        return response.data;\n    };\n}\nvar $3bf18950d42c3857$export$2e2bcd8739ae039 = $3bf18950d42c3857$var$productService;\n\n});\n\n\nvar $594Pg = parcelRequire(\"594Pg\");\n\nvar $3610C = parcelRequire(\"3610C\");\nconst $0019861bec59607b$var$productsApi = new (0, $594Pg.default)((0, $3610C.default).EndPoint);\nconst $0019861bec59607b$var$showSp = document.querySelector(\"#showsp\");\nconst $0019861bec59607b$var$addBtn = document.getElementById(\"addProductBtn\");\nconst $0019861bec59607b$var$updatePro = document.getElementById(\"updatePro\");\n// Thêm biến global để lưu trữ thông tin sản phẩm hiện tại\nlet $0019861bec59607b$var$currentProduct = null;\n$0019861bec59607b$var$addBtn.addEventListener(\"click\", $0019861bec59607b$var$addProduct);\n$0019861bec59607b$var$showSp.addEventListener(\"click\", $0019861bec59607b$var$handleDelete);\n$0019861bec59607b$var$updatePro.addEventListener(\"click\", $0019861bec59607b$var$handleUpdate);\nfunction $0019861bec59607b$var$renderProductAdmin(item) {\n    const kq = `<tr>\n    <td>${item.id}</td>\n    <td>${item.name}</td>\n    <td class=\"admin-img\"><img src=\"${item.image}\" alt=\"\" /></td>\n    <td>$ ${item.price}</td>\n    <td>${item.category}</td>\n    <td>\n      <div class=\"edit-auth\">\n        <a href=\"#\" class=\"edit-btn\" data-id=\"${item.id}\">Edit</a>\n        <a href=\"#\" class=\"delete-btn\" data-id=\"${item.id}\">Delete</a>\n      </div>\n    </td>\n  </tr>`;\n    $0019861bec59607b$var$showSp.insertAdjacentHTML(\"beforeend\", kq);\n}\nasync function $0019861bec59607b$var$addProduct() {\n    // Lấy giá trị từ các trường input\n    var name = document.getElementById(\"name\").value;\n    var price = document.getElementById(\"price\").value;\n    var image = document.getElementById(\"img\").value;\n    var category = document.getElementById(\"category\").value;\n    try {\n        // Lấy ID mới từ server\n        const lastId = await $0019861bec59607b$var$productsApi.getlastId();\n        // Tạo đối tượng chứa dữ liệu sản phẩm\n        var newProduct = {\n            id: lastId,\n            name: name,\n            price: price,\n            image: image,\n            category: category\n        };\n        // Thực hiện thêm sản phẩm và đợi cho đến khi hoàn thành\n        const addedProduct = await $0019861bec59607b$var$productsApi.addAllProducts(newProduct);\n        // Sau khi thêm thành công, render lại danh sách sản phẩm\n        closeModal();\n        $0019861bec59607b$var$renderProductAdmin(addedProduct);\n    // Sau khi thêm thành công, render lại danh sách sản phẩm\n    } catch (error) {\n        console.error(\"Error adding product:\", error);\n    }\n}\nasync function $0019861bec59607b$var$handleDelete(event) {\n    if (event.target.classList.contains(\"delete-btn\")) {\n        const productId = event.target.dataset.id;\n        try {\n            await $0019861bec59607b$var$productsApi.deleteProduct(productId);\n            const productRow = event.target.closest(\"tr\");\n            productRow.remove();\n        } catch (error) {\n            console.error(\"Error deleting product:\", error);\n        }\n    }\n}\n$0019861bec59607b$var$showSp.addEventListener(\"click\", $0019861bec59607b$var$handleEdit);\nasync function $0019861bec59607b$var$handleEdit(event) {\n    if (event.target.classList.contains(\"edit-btn\")) {\n        const productId = event.target.getAttribute(\"data-id\");\n        try {\n            // Tìm nạp dữ liệu hiện có cho sản phẩm đã chọn\n            $0019861bec59607b$var$currentProduct = await $0019861bec59607b$var$productsApi.getProductById(productId);\n            // Điền vào các trường biểu mẫu với dữ liệu hiện có\n            document.getElementById(\"nameUpdate\").value = $0019861bec59607b$var$currentProduct.name;\n            document.getElementById(\"priceUpdate\").value = $0019861bec59607b$var$currentProduct.price;\n            document.getElementById(\"imageUpdate\").value = $0019861bec59607b$var$currentProduct.image;\n            document.getElementById(\"categoryUpdate\").value = $0019861bec59607b$var$currentProduct.category;\n            // Đặt ProductId trong trường ẩn\n            document.getElementById(\"productId\").value = productId;\n            // Show the edit form\n            showEditForm();\n        } catch (error) {\n            console.error(\"Error fetching product data for edit:\", error);\n        }\n    }\n}\nasync function $0019861bec59607b$var$handleUpdate() {\n    // Kiểm tra xem có dữ liệu sản phẩm hiện tại không\n    if ($0019861bec59607b$var$currentProduct) {\n        // Lấy giá trị từ các trường input\n        var nameUpdate = document.getElementById(\"nameUpdate\").value;\n        var priceUpdate = document.getElementById(\"priceUpdate\").value;\n        var imageUpdate = document.getElementById(\"imageUpdate\").value;\n        var categoryUpdate = document.getElementById(\"categoryUpdate\").value;\n        // Lấy giá trị productId từ trường ẩn\n        const productId = document.getElementById(\"productId\").value;\n        // Tạo đối tượng chứa dữ liệu sản phẩm\n        const updatedProduct = {\n            name: nameUpdate,\n            image: imageUpdate,\n            category: categoryUpdate,\n            price: priceUpdate\n        };\n        try {\n            // Thực hiện cập nhật sản phẩm và đợi cho đến khi hoàn thành\n            const updatedProducted = await $0019861bec59607b$var$productsApi.updateProduct(productId, updatedProduct);\n            // Sau khi cập nhật thành công, render lại danh sách sản phẩm\n            closeModalUpdate();\n            $0019861bec59607b$var$renderProductAdmin(updatedProducted);\n            // Cập nhật lại dữ liệu sản phẩm hiện tại\n            $0019861bec59607b$var$currentProduct = updatedProducted;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n// Lấy danh sách sản phẩm và render khi trang được load\n$0019861bec59607b$var$productsApi.findAllProducts().then((data)=>{\n    console.log(data);\n    data.forEach((item)=>{\n        $0019861bec59607b$var$renderProductAdmin(item);\n    });\n});\n\n\n//# sourceMappingURL=product.f969389f.js.map\n","import axios from \"axios\";\nclass productService {\n  constructor(endPoint) {\n    this.collectionName = \"products\";\n    this.endPoint = endPoint;\n  }\n  findAllProducts = async () => {\n    const response = await axios.get(this.endPoint + this.collectionName);\n    return response.data;\n  };\n  addAllProducts = async (newProduct) => {\n    const response = await axios.post(this.endPoint + this.collectionName, newProduct);\n    return response.data;\n  };\n  getProductById = async (id) => {\n    const response = await axios.get(this.endPoint + this.collectionName + \"/\" + id);\n    return response.data;\n  };\n  getlastId = async () => {\n    try {\n      const response = await axios.get(`${this.endPoint}${this.collectionName}`);\n      const products = response.data;\n      if (products.length === 0) {\n        return \"0\";\n      }\n      return (parseInt(products[products.length - 1].id, 10) + 1).toString();\n    } catch (error) {\n      console.error(\"Error getting last product ID:\", error);\n    }\n  };\n\n  deleteProduct = async (productId) => {\n    const response = await axios.delete(`${this.endPoint}${this.collectionName}/${productId}`);\n    return response.data;\n  };\n  updateProduct = async (productId, updatedProduct) => {\n    const response = await axios.put(\n      `${this.endPoint}${this.collectionName}/${productId}`,\n      updatedProduct\n    );\n    return response.data;\n  };\n}\nexport default productService;\n","import productService from \"./services/productService\";\nimport JsonServerConstants from \"./constants/JsonServerConstants\";\nconst productsApi = new productService(JsonServerConstants.EndPoint);\nconst showSp = document.querySelector(\"#showsp\");\nconst addBtn = document.getElementById(\"addProductBtn\");\nconst updatePro = document.getElementById(\"updatePro\");\n// Thêm biến global để lưu trữ thông tin sản phẩm hiện tại\nlet currentProduct = null;\naddBtn.addEventListener(\"click\", addProduct);\nshowSp.addEventListener(\"click\", handleDelete);\nupdatePro.addEventListener(\"click\", handleUpdate);\n\nfunction renderProductAdmin(item) {\n  const kq = `<tr>\n    <td>${item.id}</td>\n    <td>${item.name}</td>\n    <td class=\"admin-img\"><img src=\"${item.image}\" alt=\"\" /></td>\n    <td>$ ${item.price}</td>\n    <td>${item.category}</td>\n    <td>\n      <div class=\"edit-auth\">\n        <a href=\"#\" class=\"edit-btn\" data-id=\"${item.id}\">Edit</a>\n        <a href=\"#\" class=\"delete-btn\" data-id=\"${item.id}\">Delete</a>\n      </div>\n    </td>\n  </tr>`;\n  showSp.insertAdjacentHTML(\"beforeend\", kq);\n}\nasync function addProduct() {\n  // Lấy giá trị từ các trường input\n  var name = document.getElementById(\"name\").value;\n  var price = document.getElementById(\"price\").value;\n  var image = document.getElementById(\"img\").value;\n  var category = document.getElementById(\"category\").value;\n\n  try {\n    // Lấy ID mới từ server\n    const lastId = await productsApi.getlastId();\n    // Tạo đối tượng chứa dữ liệu sản phẩm\n    var newProduct = {\n      id: lastId,\n      name: name,\n      price: price,\n      image: image,\n      category: category,\n    };\n    // Thực hiện thêm sản phẩm và đợi cho đến khi hoàn thành\n    const addedProduct = await productsApi.addAllProducts(newProduct);\n\n    // Sau khi thêm thành công, render lại danh sách sản phẩm\n    closeModal();\n    renderProductAdmin(addedProduct);\n\n    // Sau khi thêm thành công, render lại danh sách sản phẩm\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n  }\n}\nasync function handleDelete(event) {\n  if (event.target.classList.contains(\"delete-btn\")) {\n    const productId = event.target.dataset.id;\n    try {\n      await productsApi.deleteProduct(productId);\n      const productRow = event.target.closest(\"tr\");\n      productRow.remove();\n    } catch (error) {\n      console.error(\"Error deleting product:\", error);\n    }\n  }\n}\n\nshowSp.addEventListener(\"click\", handleEdit);\nasync function handleEdit(event) {\n  if (event.target.classList.contains(\"edit-btn\")) {\n    const productId = event.target.getAttribute(\"data-id\");\n    try {\n      // Tìm nạp dữ liệu hiện có cho sản phẩm đã chọn\n      currentProduct = await productsApi.getProductById(productId);\n      // Điền vào các trường biểu mẫu với dữ liệu hiện có\n      document.getElementById(\"nameUpdate\").value = currentProduct.name;\n      document.getElementById(\"priceUpdate\").value = currentProduct.price;\n      document.getElementById(\"imageUpdate\").value = currentProduct.image;\n      document.getElementById(\"categoryUpdate\").value = currentProduct.category;\n      // Đặt ProductId trong trường ẩn\n      document.getElementById(\"productId\").value = productId;\n      // Show the edit form\n      showEditForm();\n    } catch (error) {\n      console.error(\"Error fetching product data for edit:\", error);\n    }\n  }\n}\nasync function handleUpdate() {\n  // Kiểm tra xem có dữ liệu sản phẩm hiện tại không\n  if (currentProduct) {\n    // Lấy giá trị từ các trường input\n    var nameUpdate = document.getElementById(\"nameUpdate\").value;\n    var priceUpdate = document.getElementById(\"priceUpdate\").value;\n    var imageUpdate = document.getElementById(\"imageUpdate\").value;\n    var categoryUpdate = document.getElementById(\"categoryUpdate\").value;\n\n    // Lấy giá trị productId từ trường ẩn\n    const productId = document.getElementById(\"productId\").value;\n\n    // Tạo đối tượng chứa dữ liệu sản phẩm\n    const updatedProduct = {\n      name: nameUpdate,\n      image: imageUpdate,\n      category: categoryUpdate,\n      price: priceUpdate,\n    };\n\n    try {\n      // Thực hiện cập nhật sản phẩm và đợi cho đến khi hoàn thành\n      const updatedProducted = await productsApi.updateProduct(productId, updatedProduct);\n      // Sau khi cập nhật thành công, render lại danh sách sản phẩm\n      closeModalUpdate();\n      renderProductAdmin(updatedProducted);\n\n      // Cập nhật lại dữ liệu sản phẩm hiện tại\n      currentProduct = updatedProducted;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n// Lấy danh sách sản phẩm và render khi trang được load\nproductsApi.findAllProducts().then((data) => {\n  console.log(data);\n  data.forEach((item) => {\n    renderProductAdmin(item);\n  });\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$3bf18950d42c3857$export$2e2bcd8739ae039","set","s","enumerable","configurable","$fmRoT","constructor","endPoint","collectionName","findAllProducts","response","default","data","addAllProducts","newProduct","post","getProductById","getlastId","products","length","parseInt","toString","error","console","deleteProduct","productId","delete","updateProduct","updatedProduct","put","$594Pg","$3610C","$0019861bec59607b$var$productsApi","EndPoint","$0019861bec59607b$var$showSp","document","querySelector","$0019861bec59607b$var$addBtn","getElementById","$0019861bec59607b$var$updatePro","$0019861bec59607b$var$currentProduct","$0019861bec59607b$var$renderProductAdmin","item","kq","name","image","price","category","insertAdjacentHTML","$0019861bec59607b$var$addProduct","value","lastId","addedProduct","closeModal","$0019861bec59607b$var$handleDelete","event","target","classList","contains","dataset","productRow","closest","remove","$0019861bec59607b$var$handleEdit","getAttribute","showEditForm","$0019861bec59607b$var$handleUpdate","nameUpdate","priceUpdate","imageUpdate","categoryUpdate","updatedProducted","closeModalUpdate","log","addEventListener","then","forEach"],"version":3,"file":"product.f969389f.js.map"}