var t=globalThis,e={},a={},o=t.parcelRequire06c3;null==o&&((o=function(t){if(t in e)return e[t].exports;if(t in a){var o=a[t];delete a[t];var r={id:t,exports:{}};return e[t]=r,o.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(t,e){a[t]=e},t.parcelRequire06c3=o),o.register;var r=o("fmRoT");const n=new class{constructor(t){this.collectionName="categories",this.endPoint=t}getCategory=async()=>(await (0,r.default).get(this.endPoint+this.collectionName)).data;addCategories=async t=>(await (0,r.default).post(this.endPoint+this.collectionName,t)).data;getCategoryById=async t=>(await (0,r.default).get(this.endPoint+this.collectionName+"/"+t)).data;getlastId=async()=>{try{let t=(await (0,r.default).get(`${this.endPoint}${this.collectionName}`)).data;if(0===t.length)return"0";return(parseInt(t[t.length-1].id,10)+1).toString()}catch(t){console.log(t)}};deleteCategories=async t=>(await (0,r.default).delete(`${this.endPoint}${this.collectionName}/${t}`)).data;editCategory=async(t,e)=>{try{return(await (0,r.default).put(`${this.endPoint}${this.collectionName}/${t}`,e)).data}catch(t){console.log(t)}}}(o("3610C").default.EndPoint),d=document.querySelector("#showCategory"),i=document.querySelector(".form-post"),l=document.querySelector("#formEdit");let c=null;async function s(t){c=await n.getCategoryById(t),document.getElementById("nameUpdate").value=c.name,document.getElementById("categoryId").value=t,showEditForm()}function g(t){let e=`<tr>
  <td>${t.id}</td>
  <td>${t.name}</td>
  <td>
    <div class="edit-auth">
      <a href="#" class="edit-btn" data-id="${t.id}">Edit</a>
      <a href="#" class="delete-btn" data-id="${t.id}">Delete</a>
    </div>
  </td>
</tr>`;d.insertAdjacentHTML("beforeend",e)}d.addEventListener("click",async t=>{if(t.target.matches(".delete-btn")){let e=t.target.getAttribute("data-id");try{await n.deleteCategories(e),t.target.closest("tr").remove()}catch(t){console.error("Error deleting product:",t)}}else if(t.target.matches(".edit-btn")){let e=t.target.getAttribute("data-id");try{await s(e)}catch(t){console.error("Error fetching category data for edit:",t)}}}),l.addEventListener("submit",async t=>{t.preventDefault();let e=document.getElementById("nameUpdate").value,a=document.getElementById("categoryId").value;try{let t=await n.editCategory(a,{name:e});closeModalUpdate(),g(t),c=null,location.reload(!0)}catch(t){console.error("Error updating category:",t)}}),i.addEventListener("submit",async t=>{t.preventDefault();let e=document.getElementById("nameCategory").value;try{let t=await n.getlastId(),a=await n.addCategories({id:t,name:e});g(a),closeModal()}catch(t){console.log(t)}}),n.getCategory().then(t=>{console.log(t),t.forEach(t=>{g(t)})});
//# sourceMappingURL=categories.292535a1.js.map
